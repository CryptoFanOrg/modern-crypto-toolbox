#
# OpenSSL example configuration file.
# This is mostly being used for generation of certificate requests.
#

####################################################################
[ req ]
distinguished_name      = req_distinguished_name
string_mask = utf8only
default_md = sha256

req_extensions = v3_req # The extensions to add to a certificate request

x509_extensions = x509_ext

[ req_distinguished_name ]
countryName                     = Country Name (2 letter code)
countryName_default             = CN

stateOrProvinceName             = State or Province Name (full name)
stateOrProvinceName_default     = 广东

localityName                    = Locality Name (eg, city)
localityName_default    = 广州

0.organizationName              = Organization Name (eg, company)
0.organizationName_default      = 天地会

organizationalUnitName                = Organizational Unit Name (eg, section)
organizationalUnitName_default  = 青木堂

commonName                      = Common Name (e.g. server FQDN or YOUR name)
commonName_default      = *.google.com

#emailAddress                    = Email Address
#emailAddress_default    =  SvrTest@SvrTest.com

[ v3_req ]
# Extensions to add to a certificate request
#keyUsage = nonRepudiation, digitalSignature
extendedKeyUsage  = serverAuth, clientAuth
subjectAltName=@alt_names

#authorityInfoAccess = caIssuers;URI:http://my.ca/ca.html
authorityInfoAccess = caIssuers;URI:http://pki.google.com/GIAG2.crt, OCSP;URI:http://clients1.google.com/ocsp


subjectKeyIdentifier=hash
basicConstraints = critical,CA:FALSE
#authorityKeyIdentifier=keyid,issuer

certificatePolicies= 1.3.6.1.4.1.11129.2.5.1 2.23.140.1.2.2

#crlDistributionPoints=URI:http://my.com/my.crl,URI:http://oth.com/my.crl
crlDistributionPoints=URI:http://pki.google.com/GIAG2.crl


[alt_names]
DNS.1 = *.google.com
DNS.2 = *.android.com
DNS.3 = *.appengine.google.com
DNS.4 = *.cloud.google.com
DNS.5 = *.google-analytics.com
DNS.6 = *.google.ca
DNS.7 = *.google.cl
DNS.8 = *.google.co.in
DNS.9 = *.google.co.jp
DNS.10 = *.google.co.uk
DNS.11 = *.google.com.ar
DNS.12 = *.google.com.au
DNS.13 = *.google.com.br
DNS.14 = *.google.com.co
DNS.15 = *.google.com.mx
DNS.16 = *.google.com.tr
DNS.17 = *.google.com.vn
DNS.18 = *.google.de
DNS.19 = *.google.es
DNS.20 = *.google.fr
DNS.21 = *.google.hu
DNS.22 = *.google.it
DNS.23 = *.google.nl
DNS.24 = *.google.pl
DNS.25 = *.google.pt
DNS.26 = *.googleadapis.com
DNS.27 = *.googleapis.cn
DNS.28 = *.googlecommerce.com
DNS.29 = *.googlevideo.com
DNS.30 = *.gstatic.cn
DNS.31 = *.gstatic.com
DNS.32 = *.gvt1.com
DNS.33 = *.gvt2.com
DNS.34 = *.metric.gstatic.com
DNS.35 = *.urchin.com
DNS.36 = *.url.google.com
DNS.37 = *.youtube-nocookie.com
DNS.38 = *.youtube.com
DNS.39 = *.youtubeeducation.com
DNS.40 = *.ytimg.com
DNS.41 = android.com
DNS.42 = g.co
DNS.43 = goo.gl
DNS.44 = google-analytics.com
DNS.45 = google.com
DNS.46 = googlecommerce.com
DNS.47 = urchin.com
DNS.48 = youtu.be
DNS.49 = youtube.com
DNS.50 = youtubeeducation.com


# Copy subject details
# issuerAltName=issuer:copy

#nsCaRevocationUrl              = http://www.domain.dom/ca-crl.pem
#nsBaseUrl
#nsRevocationUrl
#nsRenewalUrl
#nsCaPolicyUrl
#nsSslServerName



# Section x509_ext is used when generating a self-signed certificate. I.e., openssl req -x509 ...
[ x509_ext ]

subjectKeyIdentifier        = hash
authorityKeyIdentifier  = keyid,issuer

#basicConstraints        = CA:FALSE
#keyUsage            = digitalSignature, keyEncipherment
subjectAltName          = @alt_names
nsComment           = "OpenSSL Generated Certificate"

# RFC 5280, Section 4.2.1.12 makes EKU optional
# CA/Browser Baseline Requirements, Appendix (B)(3)(G) makes me confused
extendedKeyUsage  = serverAuth, clientAuth

# Section req_ext is used when generating a certificate signing request. I.e., openssl req ...

